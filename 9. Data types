1. Класс перевода числа из одной СС в другую; преобразование
static public int ConvertNTo10(string number, int nbase)
Есть проверка if (number.Length != 0 && nbase <= 32)
необходимо дополнить nbase > 0

2. Класс перевода числа из одной СС в другую; преобразование
static public string Convert10ToN(int number, int nbase)
Есть проверка if (nbase <= 32)
необходимо дополнить nbase > 0 && number > 0

3. В 1 случае можно делать проверку на переполнение итогового числа, т.к. заданное число м.б. довольно длинным из-за формата string, а на выходе int

4. В 2 случае можно делать проверку на переполнение исходного числа (ИЛИ явно указать пользователю, чтобы не вводил больше 32к ИЛИ использовать longint)

5. В обоих случаях присутствует в ходе преобразования вылезает "волшебное число" 55, с помощью которого происходит преобразование числа в символ и наоборот. Следует сделать константой.

6. Приложение имитации броска 6-гранного кубика
(double)rolled[0] / n - подсчёт вероятности выпадения "1"
явное приведение типа; в N может оказаться что угодно, необходимо делать доп. проверку isDigit, а затем преобразованного числа

7. Приложение имитации биоритмов человека; первод даты в количество дней
int parseDate(string date) 
int days = Convert.ToInt32(String.Concat(date[0], date[1])); 
В ходе стоит вообще проверять, что забито в дате, т.е. доп. проверка isDigit

8. Приложение имитации биения человеческого сердца; заполнение данными график
for (double i = 0.0; i < 600.0; i += 0.1) {
                this.chart1.Series["main"].Points.AddXY(i, Math.Sin(2.0 * Math.PI * i)); }

в цикле заменить на i = 0; i < 6000; i++; 

9. Связанные списки; метод возвращение индекса последнего свободного элемента в случае превышения размеров списка - (реаллокация) 
return maxlength / 2; 
Небезопасная операция, т.к. неизвестно, что вернёт при делении нечётного числа, следует использовать либо целочисленное деление, либо принудительно округлять в нужную сторону

10. Связанные списки; статусы операций
head_mark != -1 && head_mark == cursor
можно вынести в отдельную переменную bool

11. Очередь; статус 
private bool ishead() //возвращает true, если голова смещена на четверть длины
        {
            if (head >= capacity / 4) return true;
            return false;
        } 
Аналогично 9

12. Хэш-таблица; поиск элемента
if (space[(index + step * i) % length].ToString() == value.ToString())
space[(index + step * i) % length] следует вынести в отдельную переменную
